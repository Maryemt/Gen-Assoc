#!/bin/bash 


set -o errexit  

declare  -r  Rbin="R"  
declare  -r  local_rlib_path=/usr/lib/${Rbin} 
declare  -r  root_parent=${local_rlib_path%/*}
declare  -r  Rzip="R.zip" 
declare  -r  cwd=`pwd`
declare owner="" 

[[  -n $(command -v ${Rbin})  ]]  ||  { 
    echo  -e "fail :  cannot found  R binaries"
    exit $? 
} 
[[ -d ${local_rlib_path} ]]   ||  { 
    echo -e  "cannot found  R lib package" 
    exit $? 
} 

getcwd  ()  {  
    echo -e "$cwd"  
} 
set_owner ()  {  

    IFS="/" read -a pathsplit  <<<  $(getcwd) 
    owner=${pathsplit[2]}  
} 
set_owner 


buildRchive ()  {  
    echo -e "+ Rchive  Build" 
    cd  ${root_parent} 
    
    if [[  -f  ${Rzip}  ]]  ; then 
        read  -p "${Rzip} already exist" 
        
        case  ${REPLY} in 
            "y"|"Y"|"yes"|"YES");;  
             *) 
                 echo -e "aborting" 
                 exit 2 
                 ;; 
         esac 

    fi   

    [[  -n  $(zip -r ${Rzip} R) ]]  && {  
        echo -e  "+[zip]  Archive  R lib packages"
        mv ${Rzip}  $cwd   
        test $?  -eq  0   &&   {  
             cd  $cwd 
             echo -e "+ Changing owner to ${owner}"
             chown ${owner}:${owner}  ${Rzip}  
        }  
    } ||  {  
        echo -e "- [zip] fail $?"  
        exit $?  
    }
}

dispatch () {  
 
    local location_path=${1}  

    [[ -f ${Rzip} ]]  ||  {   
        echo -e "trying to looking  for ${Rzip}\n [ not found ]" 
        echo -e "use  $0 build-Rchive"  
        exit $?  
    }   
    
   [[  -d  ${location_path} ]]  ||  {  
       echo -e  "Inexistant  ${1}  directory"
       exit $? 
   } 

    # start decompressing 
    #+ that overwriting the existant  
    unzip   -o ${Rbin} -d   ${location_path}
    [[ $? -eq 0  ]]  &&  {
        echo  -e  "dispatch done"
        exit $? 
    }
    echo -e "error while dispatching  to ${location_path} " 
    exit -1 
} 

case   $1  in  
    "build-Rchive")  
        buildRchive  
        ;;
    "dispatch" ) 
        dispatch  $2
        ;;
    *) 
        echo -e "undefine flags" 
        exit 2 
        ;;
esac  
 
