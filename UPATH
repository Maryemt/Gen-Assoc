#!/bin/bash  
#author :  Umar aka jukoo  <j_umar@outlook.fr> 
#This script is  for unix   operating system like 
#Download  only  scripts source  file  and  update $PATH  

set -o  errexit  
 
declare -a mains_srcipts    
declare -r dns_test="one.one.one.one"
declare -r src="scripts/"
declare -r branch="stable"
declare -r remote_repo_url="https://raw.githubusercontent.com/avalanche-org/Gen_Assoc/${branch}/${src}"
declare -r ubin="/usr/bin/" 
declare -r defC="\033[0m"  
declare -r rootuid=$((0x00)) 
declare -r sh_version_min=4 

[[  ${BASH_VERSINFO}  -gt ${sh_version} ]]  &&  echo -e "*"  ||  echo -e "your  Bash is out of date  bash v4^ is required" 
 
mains_srcipts=( 
    "mtdt.R"
    "summary.R"
    "run_analysis.R"
    )

has_command () {
    local is_define=`command -v  $1`  
    [[   -n ${is_define} ]]  && {  
        return $((0x00)) 
    } || {  
        echo  -e "\033[1;33m Warrning  on line  $LINENO : this $1 command is not available in your system\033[0m"
        exit  3 
    }
}

internet::connectivity () {
    has_command  wget
    echo -e  "... testing  connexion"
    `wget -q  --spider   ${dns_test}` 
    test  $? -eq 0  && { 
        echo -e  "\x1b[1;32m * Online ${defC}"
        return  $? 
    }||{
        echo -e "\x1b[1;33m * Offline ${defC}" 
        return  $? 
    }
}

update::global::path  () {
    echo -e  PATH=${PATH}:`pwd`  >> ~/.bashrc  
}

download_srcipts  () { 
    has_command wget 
    case  $1  in 
        "--remote")  
            internet::connectivity
            test $? -eq 0  || {
                exit_status=$? 
                echo -e "require  internet unless  you found script folder in path system "
                exit $exit_status
            }
            for  script  in ${mains_srcipts[@]}   ;do 
                echo  -e "\033[1;34m + Dowloading  $script from source $defC"
                `wget ${remote_repo_url}${script} --quiet`
                [[ $? -ne 0 ]]  &&  {
                    echo -e "-\033[1;31m fail to download  $script $defC"
                    exit 2  
                }||{
                    echo -e "-\033[1;32m $script [ downloaded ]  $defC"
                } 
            done
            update::global::path
            ;;
        *)

esac 
}



 
if [[ -n  $1 ]] ;then 
    download_srcipts  $1  
else  
   cat  << eof
only  one flag is available   it used to  to download   main scripts source without clonning again

params : 
--remote
eof
fi 
